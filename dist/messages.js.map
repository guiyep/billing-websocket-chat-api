{"version":3,"sources":["../src/messages.js"],"names":["endOfConversationMessage","message","type","messageTypes","client","data","addMessage","accountId","accountName","console","log","link","isLogs","typeOfLink","isFirmData","theMessage","push","getAllMessagesForUser","concat","getAllMessagesForClient","JSON","stringify","Object","entries","reduce","acc","messages","map"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,wBAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,iCADsB;AAE/BC,EAAAA,IAAI,EAAEC,0BAAaC;AAFY,CAAjC;AAKA,IAAMC,IAAI,GAAG,EAAb;;AAEO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAYN,OAAZ,EAAwB;AAChD,MAAI,CAACA,OAAO,CAACA,OAAT,IAAoB,CAACA,OAAO,CAACC,IAA7B,IAAqC,CAACD,OAAO,CAACO,WAAlD,EAA+D;AAC7DC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AAED,MAAI,CAACL,IAAI,CAACE,SAAD,CAAT,EAAsB;AACpBF,IAAAA,IAAI,CAACE,SAAD,CAAJ,GAAkB,EAAlB;AACD;;AAED,MAAIN,OAAO,CAACC,IAAR,KAAiBC,0BAAaQ,IAAlC,EAAwC;AACtC,QAAMC,MAAM,GAAGX,OAAO,CAACY,UAAR,KAAuB,MAAtC;AACA,QAAMC,UAAU,GAAGb,OAAO,CAACY,UAAR,KAAuB,UAA1C;AAEA,QAAME,UAAU,GAAGH,MAAM,GAAG,eAAH,GAAqBE,UAAU,GAAG,oBAAH,GAA0B,qBAAlF;AAEAT,IAAAA,IAAI,CAACE,SAAD,CAAJ,CAAgBS,IAAhB,CAAqB;AACnBd,MAAAA,IAAI,EAAED,OAAO,CAACC,IADK;AAEnBK,MAAAA,SAAS,EAAEN,OAAO,CAACM,SAFA;AAGnBC,MAAAA,WAAW,EAAEP,OAAO,CAACO,WAHF;AAInBP,MAAAA,OAAO,EAAEc,UAJU;AAKnBV,MAAAA,IAAI,EAAEJ;AALa,KAArB;AAOA,WAAOA,OAAP;AACD;;AAEDI,EAAAA,IAAI,CAACE,SAAD,CAAJ,CAAgBS,IAAhB,CAAqBf,OAArB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,SAAOJ,OAAP;AACD,CA5BM,C,CA8BP;;;;;AAEO,IAAMgB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACV,SAAD,EAAe;AAClD,MAAI,CAACF,IAAI,CAACE,SAAD,CAAT,EAAsB;AACpB,WAAO,EAAP;AACD;;AAED,SAAOF,IAAI,CAACE,SAAD,CAAJ,CAAgBW,MAAhB,CAAuBlB,wBAAvB,CAAP;AACD,CANM;;;;AAQA,IAAMmB,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAC3CV,EAAAA,OAAO,CAACC,GAAR,4CAAgDU,IAAI,CAACC,SAAL,CAAehB,IAAf,CAAhD;AACA,SAAOiB,MAAM,CAACC,OAAP,CAAelB,IAAf,EAAqBmB,MAArB,CAA4B,UAACC,GAAD,QAAgC;AAAA;AAAA,QAAzBlB,SAAyB;AAAA,QAAdmB,QAAc;;AACjED,IAAAA,GAAG,CAACT,IAAJ,OAAAS,GAAG,qBACEC,QAAQ,CAACC,GAAT,CAAa,UAAC1B,OAAD;AAAA;AACdM,QAAAA,SAAS,EAATA;AADc,SAEXN,OAFW;AAAA,KAAb,CADF,EAAH;AAOA,WAAOwB,GAAP;AACD,GATM,EASJ,EATI,CAAP;AAUD,CAZM","sourcesContent":["import messageTypes from './messagesTypes';\n\nconst endOfConversationMessage = {\n  message: '---- conversation finished ----',\n  type: messageTypes.client,\n};\n\nconst data = {};\n\nexport const addMessage = (accountId, message) => {\n  if (!message.message || !message.type || !message.accountName) {\n    console.log('ERROR - Invalid message');\n  }\n\n  if (!data[accountId]) {\n    data[accountId] = [];\n  }\n\n  if (message.type === messageTypes.link) {\n    const isLogs = message.typeOfLink === 'LOGS';\n    const isFirmData = message.typeOfLink === 'FIRMDATA';\n\n    const theMessage = isLogs ? 'Logs received' : isFirmData ? 'Firm info received' : 'Screenshot received';\n\n    data[accountId].push({\n      type: message.type,\n      accountId: message.accountId,\n      accountName: message.accountName,\n      message: theMessage,\n      data: message,\n    });\n    return message;\n  }\n\n  data[accountId].push(message);\n  console.log(data);\n  return message;\n};\n\n// export const createNewConversation = () => {};\n\nexport const getAllMessagesForUser = (accountId) => {\n  if (!data[accountId]) {\n    return [];\n  }\n\n  return data[accountId].concat(endOfConversationMessage);\n};\n\nexport const getAllMessagesForClient = () => {\n  console.log(`UPDATED: new messages collection ${JSON.stringify(data)}`);\n  return Object.entries(data).reduce((acc, [accountId, messages]) => {\n    acc.push(\n      ...messages.map((message) => ({\n        accountId,\n        ...message,\n      })),\n    );\n\n    return acc;\n  }, []);\n};\n"],"file":"messages.js"}