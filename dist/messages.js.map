{"version":3,"sources":["../src/messages.js"],"names":["endOfConversationMessage","message","type","messageTypes","client","data","user","accountName","addMessage","accountId","console","log","link","push","getAllMessagesForUser","concat","getAllMessagesForClient","JSON","stringify","Object","entries","reduce","acc","messages","map"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,wBAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,iCADsB;AAE/BC,EAAAA,IAAI,EAAEC,0BAAaC;AAFY,CAAjC;AAKA,IAAMC,IAAI,GAAG;AACX,2BAAyB,CACvB;AACEJ,IAAAA,OAAO,EAAE,wBADX;AAEEC,IAAAA,IAAI,EAAEC,0BAAaG,IAFrB;AAGEC,IAAAA,WAAW,EAAE;AAHf,GADuB,EAMvB;AACEN,IAAAA,OAAO,EAAE,0BADX;AAEEC,IAAAA,IAAI,EAAEC,0BAAaC,MAFrB;AAGEG,IAAAA,WAAW,EAAE;AAHf,GANuB;AADd,CAAb;;AAeO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAYR,OAAZ,EAAwB;AAChD,MAAI,CAACA,OAAO,CAACA,OAAT,IAAoB,CAACA,OAAO,CAACC,IAA7B,IAAqC,CAACD,OAAO,CAACM,WAAlD,EAA+D;AAC7DG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AAED,MAAI,CAACN,IAAI,CAACI,SAAD,CAAT,EAAsB;AACpBJ,IAAAA,IAAI,CAACI,SAAD,CAAJ,GAAkB,EAAlB;AACD;;AAED,MAAIR,OAAO,CAACC,IAAR,KAAiBC,0BAAaS,IAAlC,EAAwC;AACtCP,IAAAA,IAAI,CAACI,SAAD,CAAJ,CAAgBI,IAAhB,CAAqB;AACnBX,MAAAA,IAAI,EAAED,OAAO,CAACC,IADK;AAEnBO,MAAAA,SAAS,EAAER,OAAO,CAACQ,SAFA;AAGnBF,MAAAA,WAAW,EAAEN,OAAO,CAACM,WAHF;AAInBN,MAAAA,OAAO,EAAE,qBAJU;AAKnBI,MAAAA,IAAI,EAAEJ;AALa,KAArB;AAOA,WAAOA,OAAP;AACD;;AAEDI,EAAAA,IAAI,CAACI,SAAD,CAAJ,CAAgBI,IAAhB,CAAqBZ,OAArB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,SAAOJ,OAAP;AACD,CAvBM,C,CAyBP;;;;;AAEO,IAAMa,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACL,SAAD,EAAe;AAClD,MAAI,CAACJ,IAAI,CAACI,SAAD,CAAT,EAAsB;AACpB,WAAO,EAAP;AACD;;AAED,SAAOJ,IAAI,CAACI,SAAD,CAAJ,CAAgBM,MAAhB,CAAuBf,wBAAvB,CAAP;AACD,CANM;;;;AAQA,IAAMgB,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAC3CN,EAAAA,OAAO,CAACC,GAAR,4CAAgDM,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAhD;AACA,SAAOc,MAAM,CAACC,OAAP,CAAef,IAAf,EAAqBgB,MAArB,CAA4B,UAACC,GAAD,QAAgC;AAAA;AAAA,QAAzBb,SAAyB;AAAA,QAAdc,QAAc;;AACjED,IAAAA,GAAG,CAACT,IAAJ,OAAAS,GAAG,qBACEC,QAAQ,CAACC,GAAT,CAAa,UAACvB,OAAD;AAAA;AACdQ,QAAAA,SAAS,EAATA;AADc,SAEXR,OAFW;AAAA,KAAb,CADF,EAAH;AAOA,WAAOqB,GAAP;AACD,GATM,EASJ,EATI,CAAP;AAUD,CAZM","sourcesContent":["import messageTypes from './messagesTypes';\n\nconst endOfConversationMessage = {\n  message: '---- conversation finished ----',\n  type: messageTypes.client,\n};\n\nconst data = {\n  'THIS-IS-AN-ACCOUNT-ID': [\n    {\n      message: 'this is a user message',\n      type: messageTypes.user,\n      accountName: 'SOME Account 1',\n    },\n    {\n      message: 'this is a client message',\n      type: messageTypes.client,\n      accountName: 'SOME Account 2',\n    },\n  ],\n};\n\nexport const addMessage = (accountId, message) => {\n  if (!message.message || !message.type || !message.accountName) {\n    console.log('ERROR - Invalid message');\n  }\n\n  if (!data[accountId]) {\n    data[accountId] = [];\n  }\n\n  if (message.type === messageTypes.link) {\n    data[accountId].push({\n      type: message.type,\n      accountId: message.accountId,\n      accountName: message.accountName,\n      message: 'screenshot received',\n      data: message,\n    });\n    return message;\n  }\n\n  data[accountId].push(message);\n  console.log(data);\n  return message;\n};\n\n// export const createNewConversation = () => {};\n\nexport const getAllMessagesForUser = (accountId) => {\n  if (!data[accountId]) {\n    return [];\n  }\n\n  return data[accountId].concat(endOfConversationMessage);\n};\n\nexport const getAllMessagesForClient = () => {\n  console.log(`UPDATED: new messages collection ${JSON.stringify(data)}`);\n  return Object.entries(data).reduce((acc, [accountId, messages]) => {\n    acc.push(\n      ...messages.map((message) => ({\n        accountId,\n        ...message,\n      })),\n    );\n\n    return acc;\n  }, []);\n};\n"],"file":"messages.js"}